-- @path Forms=/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore

module Entities2Forms;
create OUT : Forms from IN : Forms;

rule EntityModel2FormModel {
	from
		em : Forms!EntityModel
	to 
		fm : Forms!FormModel (
			forms <- em.entityModelElements -> select(e1 | e1.oclIsTypeOf(Forms!Entity))
		)
}

rule Entity2Form {
	from
		em : Forms!Entity
	to 
		fm : Forms!Form (
			-- Ex: [form element] <- em.[form element]
			name <- em.name,
			title <- em.name,
			-- pages should include per default the Form's associate entities 
			-- AND should include any Entities LINKED as a relationship
			pages <- thisModule.PageFromEntity(em),
			pages <- (em.features -> 
				select(e1 | e1.oclIsTypeOf(Forms!Relationship)))->collect(f | thisModule.PageFromRelationship(f))
			--pages <- (em.features -> 
			--	select(e1 | e1.oclIsTypeOf(Forms!Entity)))->collect(e | thisModule.PageFromEntity(e))
		)
	do {
		fm.entity <- em;
	}
}

--lazy rule PageFromRelationship {
--	from 
--		rel : Forms!Relationship
--	to
--		p : Forms!Page (
--			p <- thisModule.PageFromEntity(rel.target)
--		)
--	
--}

-- rule w/o parameters
lazy rule PageFromEntity {
	from 
		em : Forms!Entity
	to
		p : Forms!Page (
			title <- (em.name + ' Details')
		)
--	do {
--		p;
--	}
}

lazy rule PageFromRelationship {
	from 
		rm : Forms!Relationship
	to
		p : Forms!Page (
			title <- (rm.target.name + ' RDetails')
		)
--	do {
--		p;
--	}
}
